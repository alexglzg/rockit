#define MACRO_nx 1
#define MACRO_nu 16
#define MACRO_ngI 0
#define MACRO_ng 0
#define MACRO_ngF 0
#define MACRO_ng_ineqI 7
#define MACRO_ng_ineq 7
#define MACRO_ng_ineqF 0
#define MACRO_n_stage_params 32
#define MACRO_n_global_params 0
#define MACRO_global_params {}
#define MACRO_stage_params {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3020000000572668, 2.39799999950064, 1.7979999995009976, 2.797999999500531, 0.6979999995044484, 0.2979999996097054, 1.097999999502026, 1.9979999995008049, 1.897999999500882, 0.7979999995025988, 0.49799999951534835, 0.7979999995029976, 1.29799999950166, 1.6979999995009492, 2.097999999500805, 0.20200000005726615, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3040000000360693, 2.3959999990012886, 1.7959999990020088, 2.795999999001069, 0.6959999990089696, 0.2959999992274173, 1.0959999990040812, 1.9959999990016206, 1.895999999001776, 0.7959999990052361, 0.49599999903108805, 0.7959999990060407, 1.2959999990033433, 1.695999999001911, 2.0959999990016205, 0.20400000003606775, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3059999999105261, 2.3939999985019456, 1.7939999985030335, 2.7939999985016146, 0.6939999985135656, 0.29399999885407474, 1.093999998506166, 1.9939999985024472, 1.893999998502682, 0.7939999985079129, 0.4939999985472344, 0.7939999985091303, 1.2939999985050505, 1.693999998502886, 2.093999998502447, 0.20599999991052326, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3079999996404342, 2.391999998002612, 1.7919999980040726, 2.791999998002167, 0.6919999980182385, 0.29199999849077435, 1.0919999980082813, 1.9919999980032852, 1.8919999980036006, 0.7919999980106303, 0.4919999980638034, 0.7919999980122678, 1.2919999980067824, 1.6919999980038745, 2.0919999980032853, 0.20799999964042934, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.30999999915855236, 2.389999997503287, 1.7899999975051264, 2.789999997502727, 0.6899999975229906, 0.28999999813880606, 1.089999997510428, 1.9899999975041347, 1.8899999975045318, 0.7899999975133893, 0.4899999975808121, 0.7899999975154546, 1.2899999975085394, 1.6899999975048767, 2.0899999975041346, 0.20999999915854434, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31199999833981634, 2.3879999970039716, 1.7879999970061948, 2.787999997003295, 0.6879999970278238, 0.28799999779969915, 1.0879999970126073, 1.987999997004996, 1.8879999970054764, 0.7879999970161913, 0.48799999709827824, 0.7879999970186919, 1.2879999970103224, 1.6879999970058932, 2.087999997004996, 0.21199999833980251, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31399999690939673, 2.385999996504666, 1.7859999965072788, 2.785999996503871, 0.6859999965327408, 0.2859999974752823, 1.0859999965148195, 1.9859999965058697, 1.8859999965064342, 0.7859999965190372, 0.4859999966162208, 0.7859999965219813, 1.2859999965121318, 1.685999996506924, 2.0859999965058695, 0.2139999969093706, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3159999940462459, 2.38399999600537, 1.7839999960083783, 2.783999996004455, 0.6839999960377438, 0.2839999971677638, 1.0839999960170659, 1.9839999960067558, 1.8839999960074059, 0.7839999960219284, 0.48399999613465955, 0.783999996025324, 1.2839999960139685, 1.6839999960079697, 2.0839999960067557, 0.21599999404618062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31799998288655584, 2.381999995506084, 1.7819999955094943, 2.781999995505047, 0.6819999955428354, 0.2819999968798393, 1.0819999955193473, 1.9819999955076548, 1.881999995508392, 0.7819999955248661, 0.48199999565361556, 0.7819999955287217, 1.2819999955158332, 1.6819999955090308, 2.081999995507655, 0.2179999828795486, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.31990307596355944, 2.379999995006809, 1.7799999950106267, 2.7799999950056478, 0.6799999950480183, 0.27999999661484026, 1.0799999950216648, 1.9799999950085672, 1.8799999950093924, 0.7799999950278517, 0.47999999517311126, 0.7799999950321759, 1.279999995017727, 1.6799999950101079, 2.0799999950085675, 0.21990307595382627, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32160496759053314, 2.3779999945075443, 1.7779999945117764, 2.7779999945062577, 0.6779999945532954, 0.2779999963769429, 1.0779999945240195, 1.9779999945094933, 1.8779999945104078, 0.7779999945308865, 0.47799999469317, 0.7779999945356885, 1.2779999945196503, 1.6779999945112012, 2.077999994509493, 0.22160496758186957, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32312692290517714, 2.3759999940082905, 1.7759999940129434, 2.7759999940068765, 0.6759999940586694, 0.2759999961714681, 1.0759999940264122, 1.9759999940104334, 1.875999994011439, 0.7759999940339722, 0.47599999421381683, 0.7759999940392609, 1.2759999940216045, 1.6759999940123111, 2.075999994010433, 0.2231269228974429, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32448796542833785, 2.373999993509048, 1.7739999935141288, 2.7739999935075046, 0.6739999935641434, 0.2739999960053254, 1.0739999935288442, 1.9739999935113879, 1.8739999935124858, 0.7739999935371101, 0.47399999373507823, 0.7739999935428952, 1.27399999352359, 1.6739999935134384, 2.073999993511388, 0.22448796542142774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3257051078937699, 2.3719999930098177, 1.771999993015333, 2.7719999930081425, 0.6719999930697207, 0.27199999588769286, 1.071999993031317, 1.9719999930123573, 1.8719999930135494, 0.7719999930403021, 0.4719999932569824, 0.7719999930465931, 1.271999993025608, 1.6719999930145832, 2.071999993012357, 0.225705107887594, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32679356444842234, 2.369999992510599, 1.7699999925165562, 2.76999999250879, 0.6699999925754044, 0.2699999958310977, 1.0699999925338315, 1.9699999925133418, 1.8699999925146296, 0.7699999925435494, 0.46999999277955906, 0.7699999925503568, 1.2699999925276595, 1.6699999925157465, 2.069999992513342, 0.22679356444290177, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.327766940727401, 2.367999992011393, 1.7679999920177993, 2.767999992009448, 0.6679999920811982, 0.2679999958532201, 1.067999992036389, 1.9679999920143425, 1.8679999920157273, 0.7679999920468541, 0.46799999230284, 0.7679999920541882, 1.2679999920297456, 1.6679999920169286, 2.0679999920143426, 0.2277669407224657, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3286374038910385, 2.3659999915122, 1.765999991519063, 2.765999991510117, 0.6659999915871057, 0.26599999598008683, 1.065999991538991, 1.9659999915153594, 1.865999991516843, 0.7659999915502179, 0.46599999182685914, 0.7659999915580896, 1.2659999915318672, 1.66599999151813, 2.0659999915153597, 0.2286374038866262, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3294158347008028, 2.3639999910130203, 1.7639999910203477, 2.7639999910107966, 0.6639999910931305, 0.2639999962521712, 1.063999991041639, 1.963999991016393, 1.8639999910179772, 0.7639999910536428, 0.4639999913516524, 0.7639999910620632, 1.2639999910340254, 1.6639999910193515, 2.0639999910163938, 0.22941583469685792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33011196352242383, 2.361999990513854, 1.7619999905216543, 2.7619999905114874, 0.6619999905992767, 0.2619999967372697, 1.0619999905443342, 1.9619999905174443, 1.8619999905191307, 0.7619999905571307, 0.4619999908772583, 0.7619999905661113, 1.2619999905362216, 1.6619999905205938, 2.0619999905174446, 0.23011196351889673, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33073449195213805, 2.359999990014702, 1.7599999900229837, 2.75999999001219, 0.6599999901055487, 0.25999999756177505, 1.0599999900470785, 1.9599999900185132, 1.8599999900203037, 0.7599999900606839, 0.4599999904037178, 0.7599999900702368, 1.259999990038457, 1.6599999900218574, 2.0599999900185137, 0.23073449194898452, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3312912015847728, 2.3579999895155646, 1.7579999895243361, 2.7579999895129044, 0.6579999896119507, 0.2579999990046354, 1.0579999895498733, 1.957999989519601, 1.8579999895214974, 0.7579999895643044, 0.457999989931075, 0.757999989574442, 1.2579999895407328, 1.657999989523143, 2.057999989519601, 0.2312912015819531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.331789051282566, 2.3559999890164423, 1.7559999890257127, 2.7559999890136315, 0.6559999891184877, 0.25600000191311656, 1.0559999890527205, 1.9559999890207078, 1.8559999890227121, 0.7559999890679947, 0.45599998945937664, 0.7559999890787298, 1.2559999890430504, 1.6559999890244514, 2.055999989020708, 0.23178905128004482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33223426416024715, 2.353999988517335, 1.7539999885271143, 2.7539999885143716, 0.6539999886251641, 0.25400002463542587, 1.053999988555622, 1.9539999885218347, 1.8539999885239489, 0.7539999885717572, 0.45399998898867333, 0.753999988583103, 1.2539999885454116, 1.6539999885257837, 2.0539999885218343, 0.2322342641579928, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3326324053735168, 2.3519999880182447, 1.7519999880285415, 2.751999988015125, 0.6519999881319853, 0.2520969462518507, 1.0519999880585795, 1.951999988022982, 1.851999988025208, 0.7519999880755945, 0.45199998851901907, 0.751999988087565, 1.2519999880478176, 1.6519999880271403, 2.051999988022982, 0.23263240537150115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3329884516831873, 2.3499999875191704, 1.7499999875299954, 2.7499999875158916, 0.6499999876389569, 0.2503950635481847, 1.0499999875615953, 1.9499999875241505, 1.8499999875264908, 0.7499999875795094, 0.449999988050472, 0.7499999875921187, 1.24999998755027, 1.6499999875285223, 2.0499999875241506, 0.23298845168138502, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33330685366448043, 2.347999987020114, 1.747999987031477, 2.747999987016673, 0.6479999871460846, 0.2488731175776514, 1.0479999870646712, 1.947999987025341, 1.8479999870277977, 0.7479999870835046, 0.4479999875830946, 0.7479999870967677, 1.2479999870527707, 1.6479999870299304, 2.047999987025341, 0.23330685366286888, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3335915913390667, 2.345999986521076, 1.7459999865329876, 2.745999986517469, 0.6459999866533744, 0.24751208491301943, 1.0459999865678098, 1.9459999865265547, 1.8459999865291299, 0.7459999865875833, 0.4459999871169544, 0.7459999866015157, 1.2459999865553213, 1.645999986531366, 2.045999986526555, 0.2335915913376257, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33384622392522617, 2.343999986022056, 1.7439999860345279, 2.7439999860182804, 0.6439999861608326, 0.24629495293878462, 1.0439999860710132, 1.943999986027792, 1.8439999860304883, 0.7439999860917486, 0.44399998665212403, 0.7439999861063663, 1.2439999860579238, 1.6439999860328298, 2.0439999860277918, 0.2338462239239377, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.334073934327995, 2.3419999855230555, 1.7419999855360992, 2.741999985519108, 0.6419999856684663, 0.24520650763744758, 1.041999985574284, 1.941999985529054, 1.8419999855318738, 0.7419999855960039, 0.4419999861886823, 0.7419999856113236, 1.24199998556058, 1.641999985534323, 2.0419999855290536, 0.2340739343268429, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3342775689254157, 2.3399999850240754, 1.7399999850377026, 2.739999985019952, 0.6399999851762824, 0.24423314351384084, 1.0399999850776254, 1.9399999850303415, 1.8399999850332878, 0.7399999851003528, 0.43999998572671445, 0.7399999851163921, 1.2399999850632926, 1.6399999850358467, 2.039999985030341, 0.23427756892438556, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3344596731482146, 2.337999984525116, 1.7379999845393395, 2.737999984520813, 0.6379999846842889, 0.2433626935592092, 1.0379999845810395, 1.9379999845316558, 1.837999984534731, 0.7379999846047992, 0.4379999852663128, 0.7379999846215761, 1.2379999845660634, 1.6379999845374023, 2.037999984531656, 0.23445967314729352, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3346225232976474, 2.335999984026179, 1.7359999840410114, 2.7359999840216926, 0.6359999841924937, 0.24258427717699485, 1.0359999840845295, 1.9359999840329978, 1.8359999840362047, 0.7359999841093472, 0.43599998480757785, 0.7359999841268806, 1.2359999840688949, 1.6359999840389907, 2.0359999840329976, 0.2346225232968238, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3347681549992344, 2.333999983527264, 1.7339999835427193, 2.7339999835225908, 0.6339999837009056, 0.24188816418169085, 1.0339999835880989, 1.9339999835343686, 1.8339999835377103, 0.733999983614001, 0.433999984350619, 0.7339999836323107, 1.2339999835717899, 1.6339999835406138, 2.0339999835343683, 0.23476815499849793, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3348983886480543, 2.3319999830283726, 1.7319999830444655, 2.7319999830235084, 0.6319999832095337, 0.24126565317481224, 1.031999983091751, 1.9319999830357697, 1.8319999830392493, 0.7319999831187651, 0.43199998389555555, 0.7319999831378717, 1.2319999830747506, 1.6319999830422727, 2.0319999830357696, 0.23489838864739582, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33501485216366245, 2.3299999825295066, 1.729999982546251, 2.7299999825244465, 0.6299999827183881, 0.24070896277926576, 1.0299999825954895, 1.9299999825372023, 1.8299999825408229, 0.7299999826236446, 0.42999998344251794, 0.7299999826435697, 1.2299999825777805, 1.629999982543969, 2.029999982537202, 0.2350148521630736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33511900133906747, 2.3279999820306663, 1.7279999820480778, 2.727999982025406, 0.627999982227479, 0.240211134373241, 1.0279999820993178, 1.9279999820386675, 1.8279999820424326, 0.7279999821286446, 0.4279999829916493, 0.7279999821494108, 1.2279999820808822, 1.6279999820457045, 2.0279999820386676, 0.235119001338541, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33521213803812977, 2.3259999815318526, 1.725999981549948, 2.7259999815263876, 0.6259999817368178, 0.23976594510812976, 1.0259999816032406, 1.9259999815401674, 1.8259999815440804, 0.7259999816337708, 0.42599998254310656, 0.7259999816554018, 1.2259999815840592, 1.625999981547481, 2.0259999815401675, 0.235212138037659, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33529542646884697, 2.3239999810330674, 1.7239999810518631, 2.7239999810273923, 0.6239999812464168, 0.2393678301233693, 1.0239999811072622, 1.9239999810417032, 1.8239999810457677, 0.723999981139029, 0.4239999820970625, 0.7239999811615496, 1.223999981087315, 1.6239999810493004, 2.023999981041703, 0.23529542646842605, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3353699077359434, 2.321999980534312, 1.7219999805538257, 2.721999980528422, 0.6219999807562884, 0.2390118129859891, 1.0219999806113873, 1.9219999805432766, 1.8219999805474967, 0.7219999806444256, 0.4219999816537081, 0.721999980667862, 1.2219999805906536, 1.6219999805511647, 2.0219999805432765, 0.23536990773556699, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3354365128546696, 2.3199999800355875, 1.719999980055838, 2.7199999800294763, 0.6199999802664469, 0.23869344348540958, 1.019999980115621, 1.9199999800448895, 1.819999980049269, 0.7199999801499676, 0.4199999812132545, 0.7199999801743471, 1.2199999800940788, 1.619999980053076, 2.0199999800448896, 0.23543651285433298, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33549607438848505, 2.3179999795368955, 1.7179999795579024, 2.7179999795305583, 0.6179999797769071, 0.2384087420059599, 1.0179999796199688, 1.917999979546544, 1.8179999795510873, 0.7179999796556623, 0.4179999807759361, 0.7179999796810138, 1.217999979597595, 1.6179999795550368, 2.017999979546544, 0.23549607438818407, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33554933685609434, 2.315999979038238, 1.7159999790600216, 2.7159999790316682, 0.6159999792876855, 0.2381541497817917, 1.0159999791244367, 1.9159999790482423, 1.8159999790529535, 0.7159999791615178, 0.415999980342014, 0.7159999791878715, 1.215999979101207, 1.6159999790570496, 2.0159999790482424, 0.23554933685582521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3355969660379246, 2.3139999785396173, 1.7139999785621987, 2.7139999785328084, 0.613999978798799, 0.23792648441238753, 1.013999978629031, 1.9139999785499864, 1.8139999785548706, 0.7139999786675426, 0.4139999799117799, 0.7139999786949307, 1.2139999786049198, 1.6139999785591173, 2.0139999785499865, 0.23559696603768393, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33563955729837547, 2.3119999780410336, 1.7119999780644364, 2.7119999780339796, 0.6119999783102669, 0.23772290008261657, 1.0119999781337585, 1.911999978051779, 1.811999978056841, 0.7119999781737462, 0.41199997948556066, 0.7119999782022024, 1.211999978108739, 1.6119999780612426, 2.0119999780517794, 0.23563955729816025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33567764302786907, 2.3099999775424904, 1.709999977566739, 2.709999977535184, 0.6099999778221097, 0.23754085199009367, 1.0099999776386273, 1.909999977553623, 1.809999977558868, 0.7099999776801383, 0.4099999790637244, 0.7099999777096988, 1.2099999776126702, 1.6099999775634288, 2.009999977553623, 0.23567764302767663, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3357116992977262, 2.30799997704399, 1.707999977069109, 2.7079999770364234, 0.6079999773343496, 0.23737806453518762, 1.0079999771436448, 1.907999977055521, 1.8079999770609543, 0.7079999771867304, 0.4079999786466866, 0.7079999772174328, 1.2079999771167205, 1.6079999770656797, 2.0079999770555212, 0.23571169929755414, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3357421518110539, 2.3059999765455346, 1.7059999765715512, 2.7059999765377, 0.605999976847011, 0.23723250287605613, 1.0059999766488201, 1.9059999765574762, 1.8059999765631038, 0.705999976693534, 0.40599997823491907, 0.7059999767254187, 1.2059999766208966, 1.6059999765679986, 2.0059999765574763, 0.23574215181090005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3357693812240308, 2.3039999760471264, 1.7039999760740698, 2.7039999760390154, 0.6039999763601207, 0.2371023474931479, 1.0039999761541634, 1.903999976059492, 1.8039999760653203, 0.7039999762005623, 0.40399997782895974, 0.7039999762336724, 1.2039999761252063, 1.6039999760703902, 2.003999976059492, 0.2357693812238932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33579372790410655, 2.3019999755487697, 1.7019999755766697, 2.7019999755403727, 0.6019999758737078, 0.2369859714452288, 1.0019999756596845, 1.9019999755615724, 1.801999975567608, 0.7019999757078298, 0.40199997742942484, 0.7019999757422106, 1.2019999756296578, 1.6019999755728584, 2.001999975561573, 0.23579372790398345, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3358154961845919, 2.2999999750504667, 1.699999975079356, 2.699999975041775, 0.5999999753878044, 0.23688192003263342, 0.9999999751653954, 1.8999999750637218, 1.7999999750699713, 0.6999999752153521, 0.3999999770370244, 0.6999999752510525, 1.1999999751342605, 1.5999999750754088, 1.9999999750637223, 0.23581549618448186, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33583495816882314, 2.297999974552221, 1.6979999745821344, 2.697999974543224, 0.5979999749024457, 0.23678889261353406, 0.9979999746713091, 1.8979999745659446, 1.797999974572416, 0.6979999747231462, 0.3979999766525815, 0.6979999747602184, 1.1979999746390249, 1.5979999745780469, 1.9979999745659451, 0.2358349581687247, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3358523571314513, 2.2959999740540376, 1.6959999740850116, 2.6959999740447245, 0.5959999744176712, 0.2367057263459302, 0.9959999741774396, 1.8959999740682458, 1.7959999740749468, 0.6959999742312316, 0.3959999762770566, 0.6959999742697314, 1.1959999741439615, 1.5959999740807782, 1.9959999740682461, 0.23585235713136324, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3358679105593735, 2.29399997355592, 1.6939999735879945, 2.693999973546279, 0.593999973933524, 0.2366313816521342, 0.9939999736838024, 1.8939999735706312, 1.7939999735775705, 0.6939999737396294, 0.39399997591157826, 0.6939999737796166, 1.1939999736490834, 1.5939999735836097, 1.9939999735706315, 0.2358679105592947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33588181287031743, 2.2919999730578735, 1.6919999730910913, 2.691999973047892, 0.5919999734500531, 0.23656492922405942, 0.9919999731904153, 1.8919999730731067, 1.7919999730802936, 0.691999973248363, 0.39199997555748356, 0.6919999732899026, 1.1919999731544042, 1.591999973086549, 1.9919999730731073, 0.23588181287024695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33589423784306155, 2.289999972559903, 1.68999997259431, 2.689999972549568, 0.5899999729673124, 0.23650553840687719, 0.9899999726972977, 1.8899999725756798, 1.7899999725831242, 0.689999972757459, 0.38999997521637086, 0.6899999728006208, 1.1899999726599395, 1.5899999725896041, 1.9899999725756803, 0.23589423784299846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33590534078966816, 2.2879999720620154, 1.6879999720976613, 2.687999972051312, 0.5879999724853631, 0.23645246681583862, 0.9879999722044713, 1.8879999720783578, 1.7879999720860704, 0.6879999722669466, 0.38799997489016963, 0.6879999723118064, 1.1879999721657066, 1.5879999720927849, 1.9879999720783583, 0.23590534078961173, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359152604968834, 2.2859999715642174, 1.6859999716011558, 2.6859999715531298, 0.585999972004274, 0.2364050510564714, 0.9859999717119609, 1.88599997158115, 1.7859999715891426, 0.6859999717768595, 0.3859999745812357, 0.6859999718234997, 1.1859999716717249, 1.5859999715961013, 1.9859999715811503, 0.23591526049683284, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33592412096097, 2.2839999710665166, 1.6839999711048061, 2.683999971055027, 0.5839999715241233, 0.2363626984321542, 0.9839999712197942, 1.883999971084066, 1.783999971092351, 0.6839999712872351, 0.38399997429248234, 0.6839999713357456, 1.1839999711780167, 1.5839999710995656, 1.9839999710840663, 0.23592412096092474, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359320329376601, 2.2819999705689216, 1.6819999706086268, 2.6819999705570123, 0.5819999710450003, 0.23632487953541403, 0.981999970728003, 1.881999970587117, 1.7819999705957088, 0.6819999707981166, 0.38199997402756547, 0.6819999708485959, 1.181999970684607, 1.581999970603191, 1.9819999705871176, 0.23593203293761955, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33593909532660055, 2.2799999700714433, 1.6799999701126338, 2.679999970059093, 0.5799999705670076, 0.23629112163033686, 0.9799999702366238, 1.8799999700903165, 1.77999997009923, 0.6799999703095531, 0.3799999737911518, 0.6799999703621094, 1.1799999701915245, 1.5799999701069933, 1.979999970090317, 0.2359390953265642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359453964075981, 2.277999969574093, 1.677999969616846, 2.6779999695612795, 0.5779999700902636, 0.23626100274337258, 0.9779999697456981, 1.877999969593679, 1.777999969602931, 0.6779999698216013, 0.37799997358931825, 0.6779999698763545, 1.1779999696988026, 1.57799996961099, 1.9779999695936796, 0.2359453964075655, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33595101494411606, 2.2759999690768846, 1.6759999691212852, 2.675999969063582, 0.5759999696149064, 0.23623414638866896, 0.9759999692552749, 1.8759999690972218, 1.7759999691068307, 0.6759999693343273, 0.37599997343016867, 0.6759999693914103, 1.1759999692064795, 1.575999969115202, 1.9759999690972225, 0.23595101494408685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359560211678172, 2.273999968579833, 1.673999968625977, 2.6739999685660143, 0.5739999691410983, 0.23621021686200153, 0.9739999687654107, 1.8739999686009652, 1.7739999686109515, 0.673999968847808, 0.3739999733248263, 0.6739999689073695, 1.1739999687146006, 1.5739999686196533, 1.973999968600966, 0.235956021167791, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359604776564587, 2.2719999680829575, 1.6719999681309512, 2.6719999680685915, 0.5719999686690316, 0.23618891504447334, 0.9719999682761726, 1.8719999681049326, 1.77199996811532, 0.6719999683621347, 0.3719999732891135, 0.6719999684243416, 1.1719999682232183, 1.5719999681243721, 1.9719999681049336, 0.23596047765643513, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359644401161138, 2.2699999675862803, 1.6699999676362434, 2.6699999675713313, 0.5699999681989362, 0.23616997466353126, 0.9699999677876406, 1.8699999676091528, 1.769999967619967, 0.6699999678774159, 0.3699999733465803, 0.6699999679424576, 1.1699999677323958, 1.5699999676293923, 1.9699999676091535, 0.23596444011609266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359679580774975, 2.2679999670898274, 1.6679999671418961, 2.6679999670742562, 0.5679999677310908, 0.23615315896456093, 0.9679999672999106, 1.8679999671136593, 1.7679999671249296, 0.6679999673937825, 0.36799997353443126, 0.6679999674618752, 1.1679999672422094, 1.5679999671347542, 1.96799996711366, 0.2359679580774784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33597107551509947, 2.2659999665936317, 1.665999966647962, 2.6659999665773926, 0.5659999672658376, 0.23613825775145622, 0.9659999668130997, 1.8659999666184937, 1.7659999666302537, 0.6659999669113945, 0.36599997391645905, 0.665999966982787, 1.1659999667527512, 1.5659999666405073, 1.9659999666184944, 0.23597107551508223, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33597383139686554, 2.263999966097733, 1.6639999661545046, 2.6639999660807727, 0.5639999668036024, 0.2361250847591692, 0.963999966327353, 1.8639999661237063, 1.7639999661359955, 0.6639999664304495, 0.3639999746160105, 0.663999966505432, 1.1639999662641356, 1.5639999661467123, 1.963999966123707, 0.23597383139684996, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359762601712963, 2.2619999656021803, 1.661999965661605, 2.661999965584438, 0.5619999663449253, 0.23611347532539892, 0.9619999658428522, 1.861999965629361, 1.7619999656422254, 0.6619999659511965, 0.361999975922995, 0.6619999660301114, 1.1619999657765057, 1.5619999656534453, 1.9619999656293619, 0.23597626017128218, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359783921980532, 2.259999965107038, 1.659999965169365, 2.6599999650884403, 0.5599999658905048, 0.2361032843323135, 0.9599999653598302, 1.8599999651355392, 1.7599999651490328, 0.6599999654739549, 0.35999997883949547, 0.6599999655572117, 1.1599999652900446, 1.5599999651608039, 1.95999996513554, 0.23597839219804037, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33598025412745414, 2.2579999646123885, 1.6579999646779195, 2.6579999645928476, 0.5579999654412671, 0.23609438439257877, 0.957999964878592, 1.8579999646423466, 1.7579999646565345, 0.6579999649991439, 0.3580000513635891, 0.657999965087242, 1.1579999648049923, 1.557999964668914, 1.9579999646423474, 0.23598025412744236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33598186923360196, 2.2559999641183426, 1.655999964187447, 2.65599996409775, 0.5559999649984763, 0.23608666425701724, 0.9559999643995477, 1.8559999641499247, 1.7559999641648876, 0.655999964527329, 0.35620056970621666, 0.6559999646208897, 1.15599996432167, 1.5559999641779458, 1.9559999641499255, 0.2359818692335912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359832577053111, 2.253999963625052, 1.6539999636981952, 2.653999963603274, 0.5539999645639225, 0.23608002742399448, 0.9539999639232669, 1.8539999636584688, 1.7539999636743073, 0.6539999640592985, 0.3546535916981775, 0.6539999641591163, 1.153999963840524, 1.5539999636881332, 1.9539999636584693, 0.23598325770530115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359844368984671, 2.2519999631327363, 1.6519999632105196, 2.651999963109597, 0.5519999641402602, 0.2360743909331493, 0.9519999634505746, 1.8519999631682593, 1.7519999631851042, 0.6519999635961993, 0.3533397826346259, 0.6519999637033255, 1.1519999633621971, 1.5519999631998127, 1.9519999631682599, 0.2359844368984578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33598542155297506, 2.249999962641724, 1.649999962724958, 2.64999996261699, 0.5499999637316704, 0.23606968432839004, 0.9499999629827293, 1.8499999626797194, 1.7499999626977467, 0.6499999631397917, 0.35224272039425775, 0.6499999632556822, 1.1499999628876687, 1.5499999627134926, 1.94999996267972, 0.2359854215529664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359862239770088, 2.2479999621525466, 1.6479999622423798, 2.647999962125887, 0.5479999633453108, 0.23606584877719378, 0.947999962521792, 1.8479999621935315, 1.7479999622129907, 0.6479999626929839, 0.3513486918781945, 0.6479999628197858, 1.147999962418533, 1.5479999622299943, 1.947999962193532, 0.2359862239770006, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359868542008624, 2.245999961666141, 1.6459999617643288, 2.645999961637053, 0.5459999629950185, 0.23606283633520042, 0.9459999620714944, 1.8459999617109046, 1.745999961732177, 0.6459999622611049, 0.35064652181386446, 0.6459999624022957, 1.145999961957657, 1.5459999617507756, 1.9459999617109052, 0.2359868542008546, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3359873201023292, 2.243999961184409, 1.6439999612939675, 2.6439999611520366, 0.5439999627133756, 0.2360606093469085, 0.9439999616397083, 1.843999961234302, 1.743999961258044, 0.6439999618556252, 0.35012743312013883, 0.6439999620177727, 1.1439999615110192, 1.5439999612788184, 1.9439999612343026, 0.23598732010232168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33598762750517386, 2.241999960712233, 1.6419999608395468, 2.6419999606747946, 0.5419999626134447, 0.23605913997498168, 0.9419999612481713, 1.8419999607700932, 1.7419999607976953, 0.641999961509479, 0.34978493721350895, 0.6419999617093544, 1.141999961094773, 1.541999960821885, 1.941999960770094, 0.23598762750516653, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.33598778025192955, 2.239999960270509, 1.6399999604379751, 2.639999960222054, 0.5399999643935701, 0.2360584098522823, 0.939999961011362, 1.8399999603460824, 1.7399999603824428, 0.6399999614194833, 0.3496147529089953, 0.6399999617650592, 1.1399999607886047, 1.5399999604144798, 1.939999960346083, 0.23598778025192232}
#define MACRO_K 81
#define MACRO_initial_x {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
#define MACRO_initial_u {0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2, 0.3, 2.4, 1.8, 2.8, 0.7, 0.3, 1.1, 2.0, 1.9, 0.8, 0.5, 0.8, 1.3, 1.7, 2.1, 0.2}
#define MACRO_bounds_L {0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3}
#define MACRO_bounds_U {std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity(), std::numeric_limits<double>::infinity()}
#define MACRO_samplers {}
